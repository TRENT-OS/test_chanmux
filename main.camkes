/*
 *  ChanMux Test System
 *
 *  Copyright (C) 2019-2020, Hensoldt Cyber GmbH
 */

import <std_connector.camkes>;

import "components/ChanMux_Tester1/ChanMux_Tester1.camkes";
import "components/ChanMux_Tester2/ChanMux_Tester2.camkes";

#include "system_config.h"

#include "UART/Uart.camkes"
DECLARE_COMPONENT_UART(UART)

#include "ChanMux/ChanMux.camkes"
ChanMux_DEFINE_COMPONENT(ChanMux,
                         tester1, chan,
                         tester2, chan)

assembly {
    composition {

        // UART
        DECLARE_AND_CONNECT_INSTANCE_UART(
            UART, uartDrv)

        // ChanMux
        ChanMux_DECLARE_AND_CONNECT_INSTANCE_TO_UART(ChanMux, chanMux, uartDrv)

        // ChanMux_Tester1
        component   ChanMux_Tester1     tester1;
        ChanMux_INSTANCE_CONNECT_INTERFACE(chanMux, tester1)
        ChanMux_INSTANCE_CONNECT_CHANNEL(chanMux, tester1, chan)
        connection  seL4RPCCall         tester1_txstream         (from tester1.ChanMuxTestExt, to tester2.ChanMuxTest);
        connection  seL4Notification    tester1Ready4FullDuplex  (from tester1.ready, to tester2.tester1Ready);

        // ChanMux_Tester2
        component   ChanMux_Tester2     tester2;
        ChanMux_INSTANCE_CONNECT_INTERFACE(chanMux, tester2)
        ChanMux_INSTANCE_CONNECT_CHANNEL(chanMux, tester2, chan)
        connection  seL4RPCCall         tester2_txstream         (from tester2.ChanMuxTestExt, to tester1.ChanMuxTest);
        connection  seL4Notification    tester2Ready4FullDuplex  (from tester2.ready, to tester1.tester2Ready);

    }
    configuration {
        CONFIGURE_INSTANCE_UART(
            uartDrv,
            CFG_CHANMUX_DEFAULT_UART_PHYS_ADDR,
            CFG_CHANMUX_DEFAULT_UART_INTR)

        // assign endpoint badges for n:1 RPC interface of ChanMUX. The generic
        // naming scheme is <component>.<interface>_attributes = <badge ID>
        ChanMux_ASSIGN_CLIENT_BADGE(chanMux, tester1, CHANMUX_ID_TESTER_1)
        ChanMux_ASSIGN_CLIENT_BADGE(chanMux, tester2, CHANMUX_ID_TESTER_2)
    }
}
